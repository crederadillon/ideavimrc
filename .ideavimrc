" line number
set nu
set relativenumber

" set leader to space
let mapleader=" "

" format code
:nmap <leader>fm <Action>(ReformatCode)
:vmap <leader>fm <Action>(ReformatCode)

" center while page jumping up/down
:nmap <C-d> <C-d>zz
:nmap <C-u> <C-u>zz

" center when moving between search results
:nmap n nzz
:nmap N Nzz

" toggle breakpoint on current line
:nmap <leader>bp <Action>(ToggleLineBreakpoint)
" toggle breakpoint on current line
:nmap <leader>ab <Action>(ViewBreakpoints)

" resume
:nmap <leader>sj <Action>(Resume)
" step over
:nmap <leader>sk <Action>(StepOver)
" step into
:nmap <leader>sl <Action>(StepInto)
" step out
:nmap <leader>s; <Action>(StepOut)

" floating diagnostic
:nmap <leader>fd <Action>(ShowErrorDescription)

" quick implementations
:nmap <leader>fi <Action>(QuickImplementations)

" find usages
:nmap gr <Action>(FindUsages)

" go to implementation
:nmap gi <Action>(GotoImplementation)

" rename
:nmap <leader>ra <Action>(RenameElement)

" generate
:nmap <leader>ca <Action>(Generate)

" Don't copy the replaced text after pasting in visual mode
:xmap p p:let @+=@0<CR>:let @"=@0<CR>

" move cursor while in insert mode
:imap <C-l> <Right>
:imap <C-k> <Up>
:imap <C-j> <Down>
:imap <C-h> <Left>

" close buffer
:nmap <leader>x <Action>(CloseContent)

" search everywhere
:nmap <leader>fa <Action>(SearchEverywhere)

" go to file
:nmap <leader>ff <Action>(GotoFile)

" recent files
:nmap <leader>fo <Action>(RecentFiles)

" open file tree
:nmap <C-n> <Action>(ActivateProjectToolWindow)
:nmap <leader>e <Action>(ActivateProjectToolWindow)
" open terminal
:nmap <A-i> <Action>(ActivateTerminalToolWindow)
" open debug window
" :nmap <A-i> <Action>(ActivateDebugToolWindow)

" next buffer
:nmap <TAB> <Action>(NextTab)
:nmap <S-Tab> <Action>(PreviousTab)

" window right
:nmap <C-l> <C-w>l
" window up
:nmap <C-k> <C-w>k
" window down
:nmap <C-j> <C-w>j
" window left
:nmap <C-h> <C-w>h

" find in all files
:nmap <leader>fw <Action>(FindInPath)

" comment
:nmap <leader>/ <Action>(CommentByLineComment)
:vmap <leader>/ <Action>(CommentByBlockComment)

" run
:nmap <leader>ri <Action>(Run)
" debug
:nmap <leader>di <Action>(Debug)
" stop
:nmap <leader>si <Action>(Stop)

" git blame
:nmap <leader>gb <Action>(Annotate)

" attach to process
:nmap <leader>ap <Action>(XDebugger.AttachToProcess)

:xmap <leader>y <Action>($Copy)<Esc>b
:xmap <leader>p <Action>($Paste)<Esc>b
:nmap <leader>p <Action>($Paste)
